using Microsoft.AspNetCore.Mvc;
using Telegram.Bot;
using Telegram.Bot.Types;
using System.Threading.Tasks;

[ApiController]
[Route("web-hook")] // üìå –≠—Ç–æ—Ç –º–∞—Ä—à—Ä—É—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–≤–ø–∞–¥–∞—Ç—å —Å URL –≤–µ–±—Ö—É–∫–∞!
public class TelegramController : ControllerBase
{
    private readonly TelegramBotClient _botClient;

    public TelegramController(TelegramBotClient botClient)
    {
        _botClient = botClient;
    }

    [HttpPost]
    public async Task<IActionResult> Post([FromBody] Update update)
    {
        try
        {
            if (update?.Message != null)
            {
                var chatId = update.Message.Chat.Id;
                var messageText = update.Message.Text;

                Console.WriteLine($"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {chatId}: {messageText}");

                await _botClient.SendTextMessageAsync(chatId, $"–¢—ã –Ω–∞–ø–∏—Å–∞–ª: {messageText}");
            }
            else
            {
                Console.WriteLine("‚ö†Ô∏è –ü—É—Å—Ç–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ!");
            }

            return Ok();
        }
        catch (System.Exception ex)
        {
            Console.WriteLine($"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–µ–±—Ö—É–∫–∞: {ex.Message}");
            return StatusCode(500, "–û—à–∏–±–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.");
        }
    }
}
