using System.IO;
using Microsoft.AspNetCore.Builder;
using Microsoft.AspNetCore.Http;
using Microsoft.Extensions.Hosting;
using Telegram.Bot;
using Telegram.Bot.Types;
using Microsoft.AspNetCore.Mvc;
using System;
using System.Text.Json;
using System.Threading.Tasks;

var builder = WebApplication.CreateBuilder(args);

// ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º Newtonsoft.Json –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –ø–∞—Ä—Å–∏–Ω–≥–∞
builder.Services.AddControllers().AddNewtonsoftJson();

string? BotToken = Environment.GetEnvironmentVariable("BOT_TOKEN");

if (string.IsNullOrEmpty(BotToken))
{
    Console.WriteLine("‚ùå –û—à–∏–±–∫–∞: –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω!");
    return;
}

var botClient = new TelegramBotClient(BotToken);

// ‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º Telegram Bot
builder.Services.AddSingleton(botClient);

var app = builder.Build();

app.UseRouting();

// ‚úÖ Webhook - –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
app.MapPost("/web-hook", async (HttpContext context) =>
{
    try
    {
        // üìå –õ–æ–≥–∏—Ä—É–µ–º –≤–µ—Å—å JSON –ø–µ—Ä–µ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π
        string requestBody = await new StreamReader(context.Request.Body).ReadToEndAsync();
        Console.WriteLine($"üì© –ü–æ–ª—É—á–µ–Ω Webhook JSON: {requestBody}");

        // ‚úÖ –ü–∞—Ä—Å–∏–º JSON –≤—Ä—É—á–Ω—É—é
        var update = JsonSerializer.Deserialize<Update>(requestBody);

        if (update?.Message != null)
        {
            Console.WriteLine($"üí¨ –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {update.Message.Chat.Id}: {update.Message.Text}");
            await botClient.SendTextMessageAsync(update.Message.Chat.Id, "‚úÖ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ!");
        }

        await context.Response.WriteAsync("OK");
    }
    catch (Exception ex)
    {
        Console.WriteLine($"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ Webhook: {ex.Message}");
        await context.Response.WriteAsync("Error");
    }
});

// ‚úÖ –ü–æ–¥–∫–ª—é—á–∞–µ–º –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä—ã
app.MapControllers();

app.Run();
